{
    "name": "example_spark_pipeline",
    "properties": {
        "activities": [
            {
                "name": "ExampleSparkJob",
                "type": "FabricSparkJobDefinition",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "typeProperties": {
                    "sparkJobDefinitionId": "{{ .sparkJobDefinitionId }}",
                    "workspaceId": "{{ .engineeringWorkspaceId }}"
                }
            },
            {
                "name": "E-mail alert",
                "type": "Office365Outlook",
                "dependsOn": [
                    {
                        "activity": "ExampleSparkJob",
                        "dependencyConditions": [
                            "Failed"
                        ]
                    }
                ],
                "typeProperties": {
                    "inputs": {
                        "method": "post",
                        "path": "/v2/Mail",
                        "body": {
                            "To": "{{ .data_team_email }}",
                            "Subject": "@concat('FAILED: ', toUpper(pipeline().parameters.environment), ' | ', pipeline().PipelineName)",
                            "Body": "<p>Trigger time: @{pipeline().TriggerTime}</p>\n<p>Run ID: @{pipeline().RunId}</p>\n<p>Workspace ID: @{pipeline().DataFactory}</p>",
                            "Sensitivity": "",
                            "Importance": "Normal",
                            "From": ""
                        }
                    }
                }
            },
            {
                "name": "Fail",
                "type": "Fail",
                "dependsOn": [
                    {
                        "activity": "E-mail alert",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "typeProperties": {
                    "message": "Pipeline failed",
                    "errorCode": "500"
                }
            }
        ],
        "parameters": {
            "environment": {
                "type": "string",
                "defaultValue": "{{ .environment }}"
            }
        }
    }
}
