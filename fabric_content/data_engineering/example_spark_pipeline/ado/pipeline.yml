name: "0.0$(Rev:.r)"

trigger:
  paths:
    include:
      - fabric_content/data_engineering/example_spark_pipeline/*
  branches:
    include:
      - main

parameters:
  - name: deploy
    type: boolean
    default: true
    displayName: Deploy Pipeline
  - name: destroy
    type: boolean
    default: false
    displayName: Destroy Pipeline [DANGEROUS]
  - name: capacity_environments
    displayName: List of Capacities with Environments
    type: object
    default:
      - capacity_type: nonprod
        environments: [test]
      # - capacity_type: prod
      #   environments: [uat, prod]
  - name: feature_env_name
    displayName: Feature Environment Name
    type: string
    default: dev

variables:
  - name: isPR
    value: $[eq(variables['Build.Reason'], 'PullRequest')]
  - name: isMainBranch
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  - name: isManual
    value: $[eq(variables['Build.Reason'], 'Manual')]
  # Terraform state storage
  - name: tf_state_key
    value: example_spark_pipeline
  - name: tf_state_rg
    value: stacks-terraform-state
  - name: tf_state_storage
    value: stacksstatehjfis
  - name: tf_state_container
    value: tfstate
  - name: test_unit_src
    value: "data_engineering/$(tf_state_key)/spark-job/tests/unit/"

  # Dependency versions
  - name: EirctlVersion
    value: 0.5.7

  - name: pool_vm_image
    value: ubuntu-24.04

stages:
  - stage: prelim
    displayName: Preliminaries

    jobs:
      - job: version_number
        displayName: Set Build Number
        pool:
          vmImage: $(pool_vm_image)

        steps:
          - template: ../../../../build/ado/templates/setup.yml
            parameters:
              EirctlVersion: $(EirctlVersion)

          # Update the build number
          - task: Bash@3
            displayName: Set Build Number
            inputs:
              targetType: inline
              script: |
                eirctl build:number

  - stage: deploy_to_feature_dev
    displayName: Deploy to Feature Development Workspace
    dependsOn:
      - prelim
    condition: and(succeeded(), or(eq(variables.isPR, true), eq(variables.isManual, true)))
    variables:
      - group: azure-sp-creds
      - group: artifact-ids-${{ parameters.feature_env_name }}
      - name: FABRIC_TENANT_ID
        value: $(ARM_TENANT_ID)
      - name: FABRIC_CLIENT_ID
        value: $(ARM_CLIENT_ID)
      - name: FABRIC_CLIENT_SECRET
        value: $(ARM_CLIENT_SECRET)
      - name: TF_FILE_LOCATION
        value: fabric_content/data_engineering/example_spark_pipeline/terraform
      - name: ENV_NAME
        value: ${{ parameters.feature_env_name }}

    jobs:
      - job: run_unit_tests
        displayName: Run Unit Tests
        pool:
          vmImage: $(pool_vm_image)

        steps:
          - template: ../../../../de_build/de-workload-testing.yml
            parameters:
              pythonVersion: "3.12"
              workingDirectory: "./../../"
              unitTestLocation: "./$(test_unit_src)"
