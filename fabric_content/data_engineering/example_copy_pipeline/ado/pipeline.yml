name: "0.0.$(Rev:.r)-$(Year:yyyy).$(Month).$(DayOfMonth)"

trigger:
  paths:
    include:
      - fabric_content/data_engineering/example_copy_pipeline/*
  branches:
    include:
      - main

parameters:
  - name: sub_types
    displayName: Subscription Types
    type: object
    default:
      - nonprod

variables:
  # Terraform state storage
  - name: tf_state_key
    value: example_copy_pipeline
  - name: tf_state_rg
    value: stacks-terraform-state
  - name: tf_state_storage
    value: stacksstatehjfis
  - name: tf_state_container
    value: tfstate

  # Dependency versions
  - name: EirctlVersion
    value: 0.5.7

  - name: pool_vm_image
    value: ubuntu-24.04

stages:
  - stage: prelim
    displayName: Preliminaries

    jobs:
      - job: version_number
        displayName: Set Build Number
        pool:
          vmImage: $(pool_vm_image)

        steps:
          - template: ../../../../build/ado/templates/setup.yml
            parameters:
              EirctlVersion: $(EirctlVersion)

          # Update the build number
          - task: Bash@3
            displayName: Set Build Number
            inputs:
              targetType: inline
              script: |
                eirctl build:number

  - ${{ each sub in parameters.sub_types }}:
      - stage: Deploy
        displayName: Deploy - ${{ sub }}
        dependsOn:
          - prelim
        variables:
          - group: azure-sp-creds
          - group: azure-fabric-${{ sub }}-permissions
          # - group: <ADD group with workspace and lakehouse IDs>
          - name: FABRIC_TENANT_ID
            value: $(ARM_TENANT_ID)
          - name: FABRIC_CLIENT_ID
            value: $(ARM_CLIENT_ID)
          - name: FABRIC_CLIENT_SECRET
            value: $(ARM_CLIENT_SECRET)
          - name: TF_FILE_LOCATION
            value: fabric_content/data_engineering/example_copy_pipeline/terraform
          - name: ENV_NAME
            value: ${{ sub }}

        jobs:
          - job: deploy_terraform
            displayName: Terraform Stages
            pool:
              vmImage: $(pool_vm_image)

            steps:
              - template: ../../../../build/ado/templates/setup.yml
                parameters:
                  EirctlVersion: $(EirctlVersion)

              - task: Bash@3
                displayName: Terraform Init
                inputs:
                  targetType: inline
                  script: |
                    eirctl infra:init
                env:
                  TF_BACKEND_INIT: key=$(tf_state_key)_$(sub),container_name=$(tf_state_container),storage_account_name=$(tf_state_storage),resource_group_name=$(tf_state_rg)

              - task: Bash@3
                displayName: Terraform Plan
                inputs:
                  targetType: inline
                  script: |
                    eirctl infra:plan
                env:
                  TF_BACKEND_PLAN: -input=false,-out=deploy.tfplan
                  # TODO Configure the variables for Terraform to use library variable groups
                  TF_VAR_engineering_workspace_id: 8794a888-b6c6-4fe5-8f69-6eb0467f5246 # ${engineering_workspace_id}
                  TF_VAR_bronze_workspace_id: 168a5923-e2bc-4ba8-a291-e9b77b93598c # ${bronze_workspace_id}
                  TF_VAR_bronze_lakehouse_id: 82d3658c-b789-4602-ae6e-acb57b81cddc # ${bronze_lakehouse_id}
                  TF_VAR_silver_workspace_id: a8e2dd0e-b0fc-43fd-bdf4-c63a008b6e10 # ${silver_workspace_id}
                  TF_VAR_silver_lakehouse_id: b1f97591-e73b-4577-adb4-8ec51cc17e71 # ${silver_lakehouse_id}

              - task: Bash@3
                displayName: Terraform Apply
                inputs:
                  targetType: inline
                  script: |
                    eirctl infra:apply
