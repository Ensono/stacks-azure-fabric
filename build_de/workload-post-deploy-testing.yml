parameters:
  pythonVersion: ""
  workingDirectory: "./"
  skipEndToEndTests: true
  endToEndTestLocation: "./$(test_src)/end_to_end"
  fabricTenantId: ""
  fabricClientId: ""
  fabricClientSecret: ""

steps:
  - task: UsePythonVersion@0
    displayName: Set Python Version
    inputs:
      versionSpec: ${{ parameters.pythonVersion }}
      addToPath: true

  - task: Bash@3
    displayName: "Create Poetry Environment and Install Packages"
    inputs:
      targetType: inline
      script: |
        pipx install poetry==2.1.3
        poetry install
      workingDirectory: "${{ parameters.workingDirectory }}"

  - task: Bash@3
    displayName: "End-to-end Tests"
    condition: eq('${{ parameters.skipEndToEndTests }}', false)
    env:
      FABRIC_TENANT_ID: ${{ parameters.fabricTenantId }}
      FABRIC_CLIENT_ID: ${{ parameters.fabricClientId }}
      FABRIC_CLIENT_SECRET: ${{ parameters.fabricClientSecret }}
    inputs:
      targetType: inline
      script: |
        PYTHONPATH=. poetry run pytest -rf -v "${{ parameters.endToEndTestLocation }}" --junitxml=test-results/end-to-end-tests.xml
      workingDirectory: "${{ parameters.workingDirectory }}"

  - task: PublishTestResults@2
    displayName: "Publish Test Results"
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/test-results/*.xml'
      failTaskOnFailedTests: true
